import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, classification_report

# Step 1: Data Collection and Preprocessing
data = pd.read_csv("labeled_data.csv")

# Step 2: Preprocessing
def preprocess_text(text):
    # Convert text to lowercase
    text = text.lower()
    # Remove punctuation and special characters
    text = text.replace(r"[^\w\s]", "")
    # Tokenization (split text into individual words)
    words = text.split()
    # Remove stopwords (optional, requires nltk library)
    # You can uncomment the following lines if you have the nltk library installed
    # from nltk.corpus import stopwords
    # stop_words = set(stopwords.words("english"))
    # words = [word for word in words if word not in stop_words]
    # Join the processed words back into a single string
    processed_text = " ".join(words)
    return processed_text

data["processed_text"] = data["tweet"].apply(preprocess_text)

# Step 3: Exploratory Data Analysis (EDA)
# Analyze the dataset and visualize the hate speech distribution if needed

# Step 4: Feature Extraction
vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(data["processed_text"])
y = data["class"]

# Step 5: Model Selection and Training
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LogisticRegression(max_iter=10000)  # Increase the max_iter value
model.fit(X_train, y_train)

# Step 6: Model Evaluation
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
precision = precision_score(y_test, y_pred, average='weighted')
recall = recall_score(y_test, y_pred, average='weighted')
f1 = f1_score(y_test, y_pred, average='weighted')
classification_rep = classification_report(y_test, y_pred)

# Step 7: Testing and Reporting
print("Hate Speech Detection Report:")
print("Accuracy:", accuracy)
print("Precision:", precision)
print("Recall:", recall)
print("F1 Score:", f1)
print("Classification Report:\n", classification_rep)
